[gd_scene load_steps=14 format=3 uid="uid://b7h2rg5giktv7"]

[ext_resource type="Script" path="res://scripts/armory.gd" id="1_f78wt"]
[ext_resource type="Texture2D" uid="uid://dffs0ckgt2n5b" path="res://assets/Buildings/Building_Armory_Spritesheet.png" id="1_jaw5c"]
[ext_resource type="PackedScene" uid="uid://bxfouhjhx3jp6" path="res://scenes/healthbar.tscn" id="3_6sqt2"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_7r4iw"]
size = Vector2(16, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7m01t"]
atlas = ExtResource("1_jaw5c")
region = Rect2(0, 0, 16, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_eahmt"]
atlas = ExtResource("1_jaw5c")
region = Rect2(16, 0, 16, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_7edk6"]
atlas = ExtResource("1_jaw5c")
region = Rect2(32, 0, 16, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_k0p80"]
atlas = ExtResource("1_jaw5c")
region = Rect2(48, 0, 16, 32)

[sub_resource type="AtlasTexture" id="AtlasTexture_lfnsy"]
atlas = ExtResource("1_jaw5c")
region = Rect2(64, 0, 16, 32)

[sub_resource type="SpriteFrames" id="SpriteFrames_5x38m"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_7m01t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eahmt")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7edk6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_k0p80")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_lfnsy")
}],
"loop": true,
"name": &"default",
"speed": 5.0
}]

[sub_resource type="Shader" id="Shader_rjj8q"]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_nearest;
uniform vec2 size;

void fragment() {
	vec2 pixel = size * UV;
	float half_height = size.y / 2.0;

	if (pixel.x < half_height && sqrt(pow(pixel.x - half_height, 2.0) + pow(pixel.y - half_height, 2.0)) > half_height) {
		discard;
	} else if (pixel.x > size.x - half_height && sqrt(pow(pixel.x - (size.x - half_height), 2.0) + pow(pixel.y - half_height, 2.0)) > half_height) {
		discard;
	}

	vec4 c = textureLod(screen_texture, SCREEN_UV, 0.0);

	if (c.a > 0.0001) {
		c.rgb /= c.a;
	}

	COLOR *= c;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_0e2qt"]
resource_local_to_scene = true
shader = SubResource("Shader_rjj8q")
shader_parameter/size = Vector2(20, 5.875)

[sub_resource type="RectangleShape2D" id="RectangleShape2D_2famk"]
size = Vector2(24, 40)

[node name="Armory" type="StaticBody2D"]
input_pickable = true
script = ExtResource("1_f78wt")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -16)
shape = SubResource("RectangleShape2D_7r4iw")
disabled = true

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
sprite_frames = SubResource("SpriteFrames_5x38m")
frame = 4
offset = Vector2(0, -16)

[node name="HealthBar" parent="." instance=ExtResource("3_6sqt2")]
visible = false
material = SubResource("ShaderMaterial_0e2qt")
position = Vector2(-10, -37)

[node name="Area2D" type="Area2D" parent="."]
position = Vector2(0, -16)
input_pickable = false
monitoring = false
monitorable = false

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
shape = SubResource("RectangleShape2D_2famk")

[connection signal="mouse_entered" from="." to="." method="_on_mouse_entered"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
[connection signal="body_entered" from="Area2D" to="." method="_on_area_2d_body_entered"]
[connection signal="body_exited" from="Area2D" to="." method="_on_area_2d_body_exited"]
